# A friendly name for your workflow, which will be displayed in the "Actions" tab on GitHub.
name: Java CI/CD with Maven and Docker

# This section defines the trigger for the workflow.
# We want it to run on every push to the 'main' branch.
on:
  push:
    branches: [ "main" ]

# This section defines the jobs to be run. We have one job called 'build-and-push'.
jobs:
  build-and-push:
    # The type of virtual machine to run the job on. 'ubuntu-latest' is a standard choice.
    runs-on: ubuntu-latest

    # The sequence of steps that make up the job.
    steps:
      # Step 1: Check out your repository's code
      # This action downloads your code into the runner so we can work with it.
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK 17
      # This action sets up the specified Java version, which is required for the build step.
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Build the application with Maven
      # This is the "code build" step required by the task.
      # It runs the Maven command to compile the code and package it into a .jar file.
      - name: Build with Maven
        run: mvn clean package

      # Step 4: Log in to Docker Hub
      # This uses the secrets we configured earlier to securely log in to Docker Hub.
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 5: Build and push the Docker image
      # This is the "docker build" step. It builds the image using your Dockerfile
      # and pushes it to your Docker Hub repository.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .         # Use the current directory as the build context
          push: true         # Push the image to the registry after building
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/kaiburr-task1-java-api:latest # Tag the image